(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{580:function(s,t,v){"use strict";v.r(t);var _=v(17),a=Object(_.a)({},(function(){var s=this,t=s.$createElement,v=s._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("h1",{attrs:{id:"xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[s._v("#")]),s._v(" XSS")]),s._v(" "),v("h2",{attrs:{id:"什么是-xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-xss"}},[s._v("#")]),s._v(" 什么是 XSS")]),s._v(" "),v("p",[s._v("Cross-Site-Scripting(跨脚本攻击) 简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。")]),s._v(" "),v("h2",{attrs:{id:"注入-xss-的方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注入-xss-的方式"}},[s._v("#")]),s._v(" 注入 XSS 的方式")]),s._v(" "),v("p",[s._v("如果开发者没有将用户输入的文本进行合适的过滤，就贸然插入到 HTML 中，这很容易造成注入漏洞。攻击者可以利用漏洞，构造出恶意的代码指令，进而利用恶意代码危害数据安全。")]),s._v(" "),v("ul",[v("li",[s._v("在 HTML 内嵌的文本中，恶意内容以 script 标签形成注入")]),s._v(" "),v("li",[s._v("在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串、变量、方法名）")]),s._v(" "),v("li",[s._v("在标签属性中，恶意内容包含引号，从而突破属性的限制，注入其他属性或者标签")]),s._v(" "),v("li",[s._v("在标签的 href、src 等属性中，包含 JavaScript 等可执行代码")]),s._v(" "),v("li",[s._v("在 onload、onerror、onclick 等事件中，注入不受控制的代码")]),s._v(" "),v("li",[s._v('在 style 属性和标签中，包含类似 background-image:url("javascript:..."); 的代码（新版本浏览器已经可以防范）。')]),s._v(" "),v("li",[s._v("在 style 属性和标签中，包含类似 expression(...) 的 CSS 表达式代码（新版本浏览器已经可以防范）")])]),s._v(" "),v("h2",{attrs:{id:"xss-分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xss-分类"}},[s._v("#")]),s._v(" XSS 分类")]),s._v(" "),v("p",[s._v("根据攻击的来源，XSS 攻击可分为存储型、反射型和 DOM 型三种")]),s._v(" "),v("h2",{attrs:{id:"存储型-xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储型-xss"}},[s._v("#")]),s._v(" 存储型 XSS")]),s._v(" "),v("p",[s._v("存储型 XSS 攻击的步骤:")]),s._v(" "),v("ol",[v("li",[s._v("攻击者将恶意代码提交到目标网站的数据库中")]),s._v(" "),v("li",[s._v("用户打开目标网站时，网站服务端将恶意代码从数据库中取出拼接到 HTML 中返回给浏览器")]),s._v(" "),v("li",[s._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行")]),s._v(" "),v("li",[s._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作")])]),s._v(" "),v("p",[s._v("存储型 XSS 攻击常见于用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等")]),s._v(" "),v("h2",{attrs:{id:"反射型-xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#反射型-xss"}},[s._v("#")]),s._v(" 反射型 XSS")]),s._v(" "),v("p",[s._v("反射型 XSS 攻击的步骤:")]),s._v(" "),v("ol",[v("li",[s._v("攻击者构造出特殊的 URL，其中包含恶意代码")]),s._v(" "),v("li",[s._v("用户打开带有恶意代码的 URL 时，网站服务器将恶意代码从 URL 中取出，拼接在 HMTL 中返回给浏览器")]),s._v(" "),v("li",[s._v("用户接收到响应后解析执行，混在其中的恶意代码也被执行")]),s._v(" "),v("li",[s._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者执行的操作")])]),s._v(" "),v("p",[s._v("反射型 XSS 和 存储型 XSS 的区别是: 存储型 XSS 的恶意代码存在数据库中，而反射型 XSS 的恶意代码存在 URL 中")]),s._v(" "),v("p",[s._v("反射型 XSS 攻击常见于通过 URL 传递参数的功能，如网站搜索、跳转等")]),s._v(" "),v("h2",{attrs:{id:"dom-型-xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom-型-xss"}},[s._v("#")]),s._v(" DOM 型 XSS")])])}),[],!1,null,null,null);t.default=a.exports}}]);