(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{627:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令"}},[t._v("#")]),t._v(" 自定义指令")]),t._v(" "),a("h2",{attrs:{id:"何时生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何时生效"}},[t._v("#")]),t._v(" 何时生效")]),t._v(" "),a("p",[t._v("在虚拟DOM渲染更新的create、update、destory阶段都得处理指令逻辑，所以我们需要监听这三个钩子函数来处理指令逻辑。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updateDirectives"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updateDirectives"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("destroy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unbindDirectives")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("vnode")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VNodeWithData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateDirectives")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" emptyNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"指令钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令钩子函数"}},[t._v("#")]),t._v(" 指令钩子函数")]),t._v(" "),a("p",[t._v("Vue对于自定义指令定义对象提供了几个钩子函数，这几个钩子函数分别对应着指令的几种状态，一个指令从第一次被绑定到元素上到最终与被绑定的元素解绑，它会经过以下几种状态：")]),t._v(" "),a("ul",[a("li",[t._v("bind：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")]),t._v(" "),a("li",[t._v("inserted：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。")]),t._v(" "),a("li",[t._v("update：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。")]),t._v(" "),a("li",[t._v("componentUpdated：指令所在组件的 VNode 及其子 VNode 全部更新后调用。")]),t._v(" "),a("li",[t._v("unbind：只调用一次，指令与元素解绑时调用。")])]),t._v(" "),a("h2",{attrs:{id:"指令的使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令的使用方式"}},[t._v("#")]),t._v(" 指令的使用方式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//会实例化一个指令，但这个指令没有参数 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("v-xxx")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- 将值传到指令中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('v-xxx="value"')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- 将字符串传入到指令中，如`v-html=\"'<p>内容</p>'\"`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("v-xxx=\"'string'\"")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// -- 传参数（`arg`），如`v-bind:class="className"`')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('v-xxx:arg="value"')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- 使用修饰符（`modifier`）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('v-xxx:arg.modifier="value"')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" \n")])])]),a("h2",{attrs:{id:"如何实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何实现"}},[t._v("#")]),t._v(" 如何实现")]),t._v(" "),a("h3",{attrs:{id:"全局注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局注册"}},[t._v("#")]),t._v(" 全局注册")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册一个全局自定义指令 `v-focus`")]),t._v("\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'focus'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当被绑定的元素插入到 DOM 中时……")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inserted")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 聚焦元素")]),t._v("\n    el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 页面加载完成之后自动让输入框获取到焦点的小功能")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"局部注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部注册"}},[t._v("#")]),t._v(" 局部注册")]),t._v(" "),a("p",[t._v("局部注册通过在组件options选项中设置directive属性")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("directives")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指令的定义")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inserted")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 页面加载完成之后自动让输入框获取到焦点的小功能")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"模板中使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板中使用"}},[t._v("#")]),t._v(" 模板中使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("foucs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),a("ol",[a("li",[t._v("表单防止重复提交")]),t._v(" "),a("li",[t._v("图片懒加载")]),t._v(" "),a("li",[t._v("一键复制")]),t._v(" "),a("li",[t._v("拖拽")]),t._v(" "),a("li",[t._v("页面水印")]),t._v(" "),a("li",[t._v("权限校验")]),t._v(" "),a("li",[t._v("表单输入控制(只能输入数字或字母等)")])]),t._v(" "),a("h2",{attrs:{id:"内置指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置指令"}},[t._v("#")]),t._v(" 内置指令")]),t._v(" "),a("h3",{attrs:{id:"v-if-vs-v-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if-vs-v-show"}},[t._v("#")]),t._v(" v-if vs v-show")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("v-if")]),t._v("是真实的按条件渲染，因为它确保了在切换时，条件区块内的时间监听器和子组件都会被销毁和重建")]),t._v(" "),a("li",[a("code",[t._v("v-if")]),t._v("是惰性的：如果在初次渲染时条件为 false，则不会做任何事。条件区块只有当条件首次变为 true 时才会被渲染")]),t._v(" "),a("li",[a("code",[t._v("v-show")]),t._v("则简单的多，元素无论初始条件如何，始终会被渲染，只有 CSS "),a("code",[t._v("display")]),t._v("属性会被切换")]),t._v(" "),a("li",[t._v("总的来说，"),a("code",[t._v("v-if")]),t._v("有更高的切换开销，而"),a("code",[t._v("v-show")]),t._v("有更高的初始渲染开销。因此，如果需要频繁切换，则使用 v-show 较好；如果在运行时绑定条件很少改变，则 v-if 会更合适。")]),t._v(" "),a("li",[a("code",[t._v("v-if")]),t._v("可以在"),a("code",[t._v("<template>")]),t._v("元素上使用，"),a("code",[t._v("v-show")]),t._v("不可以")])])])}),[],!1,null,null,null);s.default=e.exports}}]);