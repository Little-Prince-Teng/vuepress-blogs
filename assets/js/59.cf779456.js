(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{625:function(e,a,t){"use strict";t.r(a);var v=t(17),i=Object(v.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"keep-alive"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[e._v("#")]),e._v(" keep-alive")]),e._v(" "),t("h2",{attrs:{id:"keep-alive-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-的作用"}},[e._v("#")]),e._v(" keep-alive 的作用")]),e._v(" "),t("p",[e._v("在"),t("code",[e._v("Vue")]),e._v("中，"),t("code",[e._v("<keep-alive>")]),e._v("组件用于对动态组件进行缓存，以便在组件之间进行快速切换时保留组件的状态，从而提高性能和用户体验。它可以将已经渲染过的组件实例保存在内存中，而不是每次切换时都销毁和重新创建组件")]),e._v(" "),t("p",[e._v("KeepAlive 是一个内置抽象组件，它的功能是在多个组件间动态切换时缓存被移除的组件实例")]),e._v(" "),t("ul",[t("li",[e._v("缓存组件状态：当组件被包裹在"),t("code",[e._v("<keep-alive>")]),e._v("中时组件的状态将会被缓存。这意味着在组件被切换出去后，组件的状态仍然被保留，包括数据、计算属性、事件监听器等")]),e._v(" "),t("li",[e._v("节省性能开销：由于被缓存的组件不需要每次都重新创建和销毁，可以减少组件的初始化和销毁所带来的性能开销，提高页面的响应速度")]),e._v(" "),t("li",[e._v("能在组件切换过程中将状态保留在内存中，防止重复渲染 DOM")]),e._v(" "),t("li",[e._v("避免反复渲染影响页面性能，同时也可以很大程度上减少接口请求，减少服务器压力")]),e._v(" "),t("li",[e._v("能够进行路由组件缓存和组件缓存")]),e._v(" "),t("li",[e._v("提供钩子函数："),t("code",[e._v("<keep-alive>")]),e._v("组件提供了一些钩子函数，可以在组件被缓存或激活时进行相应的操作。例如，可以使用"),t("code",[e._v("activated")]),e._v("钩子函数在组件被激活时执行一些逻辑，使用"),t("code",[e._v("deactivated")]),e._v("钩子函数在组件被缓存时执行一些清理操作")])]),e._v(" "),t("h2",{attrs:{id:"keep-alive-注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-注册"}},[e._v("#")]),e._v(" keep-alive 注册")]),e._v(" "),t("p",[e._v("在初始化全局 api 执行 initGlobalAPI 时，会将内置组件 KeepAlive 注册到全局")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import builtInComponents from '../components/index'\n\nexport function initGlobalAPI(Vue: GlobalAPI) {\n\t...\n\n\textend(Vue.options.components, builtInComponents)\n}\n")])])]),t("h2",{attrs:{id:"keepalive-组件和普通组件不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-组件和普通组件不同"}},[e._v("#")]),e._v(" KeepAlive 组件和普通组件不同")]),e._v(" "),t("ul",[t("li",[e._v("KeepAlive 组件的渲染是手写 render 函数实现的，普通组件是写模板，利用 vue 编译成 render函数")]),e._v(" "),t("li",[e._v("KeepAlive 组件不会渲染任何实体节点，是一个抽象组件")])]),e._v(" "),t("h2",{attrs:{id:"keepalive-组件的-props"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-组件的-props"}},[e._v("#")]),e._v(" KeepAlive 组件的 props")]),e._v(" "),t("ul",[t("li",[e._v("include，包含的组件，可以是一个以英文逗号分隔的字符串、一个正则表达式，或是包含这两种类型的一个数组")]),e._v(" "),t("li",[e._v("exclude，排除的组件，可以是一个以英文逗号分隔的字符串、一个正则表达式，或是包含这两种类型的一个数组")]),e._v(" "),t("li",[e._v("max，最大缓存实例数，遵循 LRU 缓存策略")])]),e._v(" "),t("h2",{attrs:{id:"lru-缓存策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lru-缓存策略"}},[e._v("#")]),e._v(" LRU 缓存策略")]),e._v(" "),t("p",[e._v("LRU 缓存策略，即采用最近最少使用的缓存策略，它的原则是，如果一个数据最近没有被访问到，那么它将来被访问的几率也很小，也就是说当限定的内存空间已没有其他空间可用时，应该把最久没有访问到的数据去除掉。")]),e._v(" "),t("h2",{attrs:{id:"keepalive-组件的-render-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-组件的-render-函数"}},[e._v("#")]),e._v(" KeepAlive 组件的 render 函数")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d93fb861e2e4e94a36b181b8f99c9ff~tplv-k3u1fbpfcp-watermark.image?",alt:"KeepAlive 组件的 render 函数"}})]),e._v(" "),t("h2",{attrs:{id:"keepalive-渲染到-dom-的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-渲染到-dom-的实现"}},[e._v("#")]),e._v(" KeepAlive 渲染到 DOM 的实现")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ada3edac5754186bf5839f78f6e0cd5~tplv-k3u1fbpfcp-watermark.image?",alt:"KeepAlive 渲染到 DOM 的实现"}})]),e._v(" "),t("h2",{attrs:{id:"keepalive-组件生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-组件生命周期"}},[e._v("#")]),e._v(" KeepAlive 组件生命周期")]),e._v(" "),t("p",[e._v("keep-alive 组件的渲染氛围首次渲染和缓存渲染，当命中缓存时，不会再执行 created 和 mounted 钩子函数，而会执行 activated 钩子函数。销毁时也不会执行 destroyed 钩子函数，而会执行 deactivated 钩子函数")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/22ac2139735f48a092f8b45ec9421f3d~tplv-k3u1fbpfcp-watermark.image?",alt:"KeepAlive 组件生命周期-activated"}})]),e._v(" "),t("h2",{attrs:{id:"keep-alive-如何刷新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-如何刷新"}},[e._v("#")]),e._v(" keep-alive 如何刷新")]),e._v(" "),t("ul",[t("li",[e._v("在 KeepAlive 组件中添加 include 或 exclude")]),e._v(" "),t("li",[e._v("在生命周期钩子函数 activated 中执行更新操作")])]),e._v(" "),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[e._v("#")]),e._v(" 参考文章")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/v2/extend/keep-alive.html#%E5%86%85%E7%BD%AE%E7%BB%84%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("keep-alive"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=i.exports}}]);