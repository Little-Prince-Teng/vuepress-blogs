(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{629:function(t,a,r){"use strict";r.r(a);var e=r(17),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"virtual-dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#virtual-dom"}},[t._v("#")]),t._v(" Virtual Dom")]),t._v(" "),r("h2",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),r("p",[t._v("虚拟DOM是一种在JavaScript框架中用于高效更新和渲染用户界面的概念和技术。它是对真实DOM的一种抽象表示，通过在内存中构建和操作虚拟DOM树，然后再将其与真实DOM进行对比并更新，以减少DOM操作的次数，提高性能。")]),t._v(" "),r("p",[t._v("vue官方文档描述")]),t._v(" "),r("blockquote",[r("p",[t._v("虚拟 DOM (Virtual DOM，简称 VDOM) 是一种编程概念，意为将目标所需的 UI 通过数据结构“虚拟”地表示出来，保存在内存中，然后将真实的 DOM 与之保持同步。")])]),t._v(" "),r("h2",{attrs:{id:"原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),r("ol",[r("li",[t._v("用 JavaScript 对象模拟真实DOM 树，每个节点对应真实 DOM 树的一个元素，并渲染这个 DOM 树(初始渲染)")]),t._v(" "),r("li",[t._v("当组件的数据发生变化时，框架会重新构建一个新的虚拟DOM树，然后比较新旧虚拟DOM树，得到比较后的差异对象(diff)")]),t._v(" "),r("li",[t._v("框架将所有需要更新的变化记录下来，并尽可能将它们合并为一次批量更新操作，以减少真实DOM操作的次数(批量更新)")]),t._v(" "),r("li",[t._v("框架将更新后的虚拟DOM树应用于真实DOM(patch)")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b7f3f08bf4b4fc39f694b2588d3599f~tplv-k3u1fbpfcp-watermark.image?",alt:"虚拟 DOM"}})]),t._v(" "),r("h2",{attrs:{id:"优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("开发者能够灵活、声明式地创建、检查和组合所需 UI 的结构，同时只需把具体的 DOM 操作留给渲染器去处理")])]),t._v(" "),r("li",[r("strong",[t._v("可维护性更好")])]),t._v(" "),r("li",[r("strong",[t._v("可以渲染到 DOM 以外的 backend，例如 ReactNative")])]),t._v(" "),r("li",[r("strong",[t._v("抽象了原本的渲染过程，实现了跨平台的能力，而不仅仅局限于浏览器的 DOM，可以是安卓和 IOS 的原生组件，可以是小程序，也可以是各种 GUI")])]),t._v(" "),r("li",[r("strong",[t._v("框架可以更加智能地管理DOM操作，避免频繁的重排和重绘，从而提高性能和响应速度，虚拟DOM提供了一种方便的方式来描述和操作用户界面，使得开发者可以更专注于业务逻辑而不是手动操作DOM")])])]),t._v(" "),r("h2",{attrs:{id:"缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),r("ul",[r("li",[t._v("额外的内存消耗：虚拟DOM需要在内存中维护一份虚拟DOM树的副本，这会占用一定的内存。在大规模应用中，虚拟DOM的内存消耗可能相对较高")]),t._v(" "),r("li",[t._v("不适用于所有场景：虚拟DOM的性能优势在大型应用或具有复杂交互场景中更为显著。而对于相对简单的静态页面或小型应用，虚拟DOM可能会引入不必要的复杂性和开销")]),t._v(" "),r("li",[t._v("如果混用合成事件和原生 DOM 事件，有可能会出 bug")]),t._v(" "),r("li",[t._v("React 为虚拟 DOM 创造了合成事件，跟原生 DOM 事件不太一样，要额外注意")])]),t._v(" "),r("h2",{attrs:{id:"虚拟-dom-的新鲜玩法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-的新鲜玩法"}},[t._v("#")]),t._v(" 虚拟 DOM 的新鲜玩法")]),t._v(" "),r("ul",[r("li",[t._v("omi 将虚拟 DOM 和 Web Component 结合")]),t._v(" "),r("li",[t._v("Taro 带来的多端统一的能力")])]),t._v(" "),r("h2",{attrs:{id:"diff-算法的进化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法的进化"}},[t._v("#")]),t._v(" diff 算法的进化")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/6/18/16b68b1c3a7d9464~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"diff 算法的进化"}})]),t._v(" "),r("h2",{attrs:{id:"innerhtml-vs-virtual-dom-的重绘性能消耗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#innerhtml-vs-virtual-dom-的重绘性能消耗"}},[t._v("#")]),t._v(" innerHTML vs. Virtual DOM 的重绘性能消耗")]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("innerHTML:  render html string O(template size) + 重新创建所有 DOM 元素 O(DOM size)")]),t._v(" "),r("li",[t._v("Virtual DOM: render Virtual DOM + diff O(template size) + 必要的 DOM 更新 O(DOM change)")])])]),t._v(" "),r("p",[t._v("Virtual DOM render + diff 显然比渲染 html 字符串要慢，但是！它依然是纯 js 层面的计算，比起后面的 DOM 操作来说，依然便宜了太多。可以看到，innerHTML 的总计算量不管是 js 计算还是 DOM 操作都是和整个界面的大小相关，但 Virtual DOM 的计算量里面，只有 js 计算和界面大小相关，DOM 操作是和数据的变动量相关的。前面说了，和 DOM 操作比起来，js 计算是极其便宜的。这才是为什么要有 Virtual DOM：它保证了 1）不管你的数据变化多少，每次重绘的性能都可以接受；2) 你依然可以用类似 innerHTML 的思路去写你的应用")]),t._v(" "),r("h2",{attrs:{id:"参考文档"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/31809713",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎：操作真实DOM慢？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.51cto.com/u_15328720/3404087",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅析虚拟DOM原理并实现"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.cn/post/6844903870229905422#heading-7",target:"_blank",rel:"noopener noreferrer"}},[t._v("虚拟 DOM 到底是什么？"),r("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);